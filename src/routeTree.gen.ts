/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as CreatorsImport } from './routes/creators'
import { Route as CreatorImport } from './routes/_creator'
import { Route as ConsumerImport } from './routes/_consumer'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as CreatorCreatorpageImport } from './routes/_creator/creatorpage'
import { Route as ConsumerSettingsImport } from './routes/_consumer/settings'
import { Route as ConsumerPostsImport } from './routes/_consumer/posts'
import { Route as ConsumerAboutImport } from './routes/_consumer/about'
import { Route as AuthDashboard2Import } from './routes/_auth/dashboard2'

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const CreatorsRoute = CreatorsImport.update({
  path: '/creators',
  getParentRoute: () => rootRoute,
} as any)

const CreatorRoute = CreatorImport.update({
  id: '/_creator',
  getParentRoute: () => rootRoute,
} as any)

const ConsumerRoute = ConsumerImport.update({
  id: '/_consumer',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CreatorCreatorpageRoute = CreatorCreatorpageImport.update({
  path: '/creatorpage',
  getParentRoute: () => CreatorRoute,
} as any)

const ConsumerSettingsRoute = ConsumerSettingsImport.update({
  path: '/settings',
  getParentRoute: () => ConsumerRoute,
} as any)

const ConsumerPostsRoute = ConsumerPostsImport.update({
  path: '/posts',
  getParentRoute: () => ConsumerRoute,
} as any)

const ConsumerAboutRoute = ConsumerAboutImport.update({
  path: '/about',
  getParentRoute: () => ConsumerRoute,
} as any)

const AuthDashboard2Route = AuthDashboard2Import.update({
  path: '/dashboard2',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_consumer': {
      id: '/_consumer'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ConsumerImport
      parentRoute: typeof rootRoute
    }
    '/_creator': {
      id: '/_creator'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof CreatorImport
      parentRoute: typeof rootRoute
    }
    '/creators': {
      id: '/creators'
      path: '/creators'
      fullPath: '/creators'
      preLoaderRoute: typeof CreatorsImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard2': {
      id: '/_auth/dashboard2'
      path: '/dashboard2'
      fullPath: '/dashboard2'
      preLoaderRoute: typeof AuthDashboard2Import
      parentRoute: typeof AuthImport
    }
    '/_consumer/about': {
      id: '/_consumer/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof ConsumerAboutImport
      parentRoute: typeof ConsumerImport
    }
    '/_consumer/posts': {
      id: '/_consumer/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof ConsumerPostsImport
      parentRoute: typeof ConsumerImport
    }
    '/_consumer/settings': {
      id: '/_consumer/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ConsumerSettingsImport
      parentRoute: typeof ConsumerImport
    }
    '/_creator/creatorpage': {
      id: '/_creator/creatorpage'
      path: '/creatorpage'
      fullPath: '/creatorpage'
      preLoaderRoute: typeof CreatorCreatorpageImport
      parentRoute: typeof CreatorImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({ AuthDashboard2Route }),
  ConsumerRoute: ConsumerRoute.addChildren({
    ConsumerAboutRoute,
    ConsumerPostsRoute,
    ConsumerSettingsRoute,
  }),
  CreatorRoute: CreatorRoute.addChildren({ CreatorCreatorpageRoute }),
  CreatorsRoute,
  SignInRoute,
  SignUpRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_consumer",
        "/_creator",
        "/creators",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard2"
      ]
    },
    "/_consumer": {
      "filePath": "_consumer.tsx",
      "children": [
        "/_consumer/about",
        "/_consumer/posts",
        "/_consumer/settings"
      ]
    },
    "/_creator": {
      "filePath": "_creator.tsx",
      "children": [
        "/_creator/creatorpage"
      ]
    },
    "/creators": {
      "filePath": "creators.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/_auth/dashboard2": {
      "filePath": "_auth/dashboard2.tsx",
      "parent": "/_auth"
    },
    "/_consumer/about": {
      "filePath": "_consumer/about.tsx",
      "parent": "/_consumer"
    },
    "/_consumer/posts": {
      "filePath": "_consumer/posts.tsx",
      "parent": "/_consumer"
    },
    "/_consumer/settings": {
      "filePath": "_consumer/settings.tsx",
      "parent": "/_consumer"
    },
    "/_creator/creatorpage": {
      "filePath": "_creator/creatorpage.tsx",
      "parent": "/_creator"
    }
  }
}
ROUTE_MANIFEST_END */
